import { getAsArray, getAsObject, get } from "@parameter1/base-cms-object-path";
import eventLinkAttrs from "@parameter1/base-cms-marko-web-p1-events/utils/link-attrs";
import eventEntity from "@parameter1/base-cms-marko-web-p1-events/utils/base-content-entity";
import queryFragment from "@pmmi-media-group/package-theme-monorail/graphql/fragments/content-list";
import { buildImgixUrl } from "@parameter1/base-cms-image";
import imageHeight from "@parameter1/base-cms-marko-web/components/node/utils/image-height";

$ const { id, type, pageNode, ...rest } = input;
$ const sections = getAsArray(input, "sections");
$ const { site, i18n } = out.global;
$ const lang = site.config.lang || "en";

<global-content-wrapper-layout
  id=id
  type=type
  page-node=pageNode
  ...rest
>
  <@section|{ aliases }| modifiers=["first-sm"]>
    <theme-gam-define-display-ad
      name="leaderboard"
      position="content_page"
      aliases=aliases
      modifiers=["inter-block"]
    />
  </@section>

  <@section|{ aliases, blockName, content }| modifiers=["content-header"]>
    <theme-gam-wallpaper-ad aliases=aliases position="content_page" />
    $ const { primarySection } = content;
    <div>
      <if(!content.isLeader)>
        <div class="content-page-header">
          <theme-content-page-breadcrumbs section=primarySection />
          <marko-web-content-name tag="h1" class="page-wrapper__title" obj=content />
        </div>
        <div class="content-page-body">
          <default-theme-content-contact-details
            obj=content
            website-link-attrs=eventLinkAttrs({
              category: "Company Profile Page",
              label: "Company Website",
              entity: eventEntity(content.id, "company"),
            })
            social-link-attrs=eventLinkAttrs({
              category: "Company Profile Page",
              label: "Company Social Link",
              entity: eventEntity(content.id, "company"),
            })
          />
        </div>
      </if>
      <else>
        <div class="content-page-header  content-page-header--full-width">
          <theme-content-page-breadcrumbs section=primarySection />
          <div class="row">
            <div class="col-md-9 col-sm-12 col-lg-10">
              <div class="ldp">
                <div class="ldp__logo">
                  <global-company-logo content=content />
                </div>
                <div class="ldp__title">
                  <marko-web-content-name tag="h1" class="page-wrapper__title" obj=content />
                  <marko-web-content-city-state-zip tag="p" class="text-small text-muted" obj=content />
                </div>
              </div>
            </div>
            <div class="col-md-3 col-lg-2 col-sm-12 justify-content-center d-flex flex-column px-3 py-3">
              <div class="ldp__social">
                <marko-web-leaders-company-website-link company=content lang=lang/>
                <div class="mt-2 d-flex justify-content-around">
                  <for|item| of=content.socialLinks>
                    <marko-web-leaders-company-social-link company=content item=item />
                  </for>
                </div>
              </div>
            </div>
          </div>
          <hr>
        </div>
      </else>
    </div>
    <div class="row">
      <div class="col-lg-8">
        <if(!content.isLeader)>
          <div class="content-page-body">
            <default-theme-content-contact-details
              obj=content
              website-link-attrs=eventLinkAttrs({
                category: "Company Profile Page",
                label: "Company Website",
                entity: eventEntity(content.id, "company"),
              })
              social-link-attrs=eventLinkAttrs({
                category: "Company Profile Page",
                label: "Company Social Link",
                entity: eventEntity(content.id, "company"),
              })
            />
          </div>
        </if>
        <else>

        <div class="content-page-body">
          <marko-web-node-list collapsible=false class="mt-block">
            <@header>
              ${i18n("Company Overview")}
            </@header>
            <@body>
              <label class="content-section-header">${i18n("About")} ${content.name}</label>
              <marko-web-content-teaser tag="p" obj=content />
              <label class="content-section-header">${i18n("Product Summary")}</label>
              <marko-web-obj-text tag="p" obj=content field="productSummary" type="content" html=true />
            </@body>
          </marko-web-node-list>

          <marko-web-node-list collapsible=false class="mt-block">
            <@header>
              <if(content.isLeader)>${site.get("leaders.title")}</if>
              <else>${i18n("Company Details")}</else>
            </@header>
            <@body>
              <label class="content-section-header content-section-header--border">${i18n("At-a-glance")}</label>
              <global-company-details company=content lang=lang/>

              <label class="content-section-header content-section-header--border">${i18n("Contact")}</label>
              $ const { socialLinks, ...contentSansSocial } = content;
              <default-theme-content-contact-details
                obj=contentSansSocial
                website-link-attrs=eventLinkAttrs({
                  category: "Company Profile Page",
                  label: "Company Website",
                  entity: eventEntity(content.id, "company"),
                })
                lang=lang
              />

              <label class="content-section-header content-section-header--border">${i18n("More info on")} ${content.name}</label>
              <global-content-body-with-tracking block-name="leaders-more-info" content=content />
            </@body>
          </marko-web-node-list>

          <marko-web-query|{ nodes }|
            name="all-company-content"
            params={
              companyId: id,
              includeContentTypes: ["Promotion"],
              queryFragment,
              limit: 4,
              withSite: false,
            }
          >
            <marko-web-node-list class="mt-block">
              <@header>
                ${i18n("Featured Products")}
              </@header>
              <@nodes|{ nodes: items }| nodes=nodes>
                <default-theme-card-deck-flow cols=2 nodes=items>
                  <@slot|{ node, index }|>
                    <theme-featured-products-card-node
                      company-id=id
                      image-width=340
                      node=node
                    />
                  </@slot>
                </default-theme-card-deck-flow>
              </@nodes>
            </marko-web-node-list>
          </marko-web-query>



        </div>
        </else>
        <${input.afterBody}
          aliases=aliases
          block-name=blockName
          content=content
        />
      </div>

      <div class="col-lg-4 pt-block">
        $ const inquiry = site.getAsObject('inquiry');
        <if(content.isLeader)>
          <marko-web-node-list collapsible=false>
            <@header>Request More Information</@header>
            <@body>
              <marko-web-inquiry-form content=content with-header=false modifiers=["node-list"] />
            </@body>
          </marko-web-node-list>
          $ const contacts = getAsArray(content, "contacts.edges").map(({ node }) => node);
          <marko-web-node-list class="mt-block">
            <@header>
              <if(contacts.length > 1)>
                ${i18n("Key Contacts")}
              </if>
              <else>
                ${i18n("Key Contact")}
              </else>
            </@header>
            <@nodes|{ nodes }| nodes=contacts>
              <for|node| of=nodes>
                <theme-author-card-node node=node with-email=true />
              </for>
            </@nodes>
          </marko-web-node-list>
          $ const videos = getAsArray(content, "videos.edges").map(({ node }) => node);
          <marko-web-node-list class="mt-block">
            <@header>
              ${i18n("Featured Videos")}
            </@header>
            <@nodes|{ nodes }| nodes=videos>
              <for|node| of=nodes>
                <div class="node-list__node">
                  <theme-youtube-card-node
                    node=node
                    company-id=content.id
                    image-position="top"
                    link-attrs={
                      "data-company-id": content.id,
                      "data-company-name": content.name,
                    }
                  />
                </div>
              </for>
            </@nodes>
            <@footer>
              $ const url = get(content, "youtube.url");
              <a href=url target="_blank" rel="noopener" class="btn btn-sm btn-block btn-secondary">
                ${i18n("View all videos")} &gt;
              </a>
            </@footer>
          </marko-web-node-list>

          <marko-web-query|{ nodes }|
            name="all-company-content"
            params={ companyId: id, includeContentTypes: ["Article"], limit: 3, withSite: false, queryFragment }
          >
            <marko-web-block name="node-list">
              <marko-web-element block-name="node-list" name="header">
                ${i18n("Case Studies")}
              </marko-web-element>
              <default-theme-card-deck-flow
                cols=1
                nodes=nodes
                modifiers=["node-list"]
              >
                <@slot|{ node }|>
                  <theme-content-node
                    image-position="right"
                    full-height=true
                    card=true
                    flush=false
                    modifiers=["node-list"]
                    node=node
                    with-teaser=false
                    with-dates=false
                  >
                    <@image width=112 ar="1:1" />
                  </theme-content-node>
                </@slot>
              </default-theme-card-deck-flow>
            </marko-web-block>
          </marko-web-query>

          <marko-web-query|{ nodes }|
            name="all-company-content"
            params={ companyId: id, includeContentTypes: ["News", "PressRelease"], withSite: false, limit: 5, queryFragment }
          >
            <marko-web-block name="node-list">
              <marko-web-element block-name="node-list" name="header">
                ${i18n("Company News")}
              </marko-web-element>
              <default-theme-card-deck-flow
                cols=1
                nodes=nodes
                modifiers=["node-list"]
              >
                <@slot|{ node }|>
                  <theme-content-node
                    image-position="right"
                    full-height=true
                    card=true
                    flush=false
                    modifiers=["node-list"]
                    node=node
                    with-teaser=false
                    with-dates=false
                  >
                    <@image width=112 ar="1:1" />
                  </theme-content-node>
                </@slot>
              </default-theme-card-deck-flow>
            </marko-web-block>
          </marko-web-query>
        </if>
      </div>
    </div>
  </@section>

  <@section|{ aliases }|>
    <theme-gam-define-display-ad
      name="rotation"
      position="content_page"
      aliases=aliases
      modifiers=["inter-block"]
    />
  </@section>

  <@section>
    <theme-top-stories-block />
  </@section>

  <for|s| of=sections>
    <@section|{ blockName, content, aliases }| modifiers=s.modifiers>
      <${s.renderBody}
        block-name=blockName
        content=content
        aliases=aliases
      />
    </@section>
  </for>
</global-content-wrapper-layout>
