import { get, getAsArray } from "@mindful-web/object-path";
import contentIframe from "@pmmi-media-group/package-global/utils/content-iframe";
import getContentPreview from "@mindful-web/marko-web-theme-monorail/utils/get-content-preview";
import handleContentTypePrimarySection from "@pmmi-media-group/package-global/utils/handle-content-type-primary-section";

$ const { site, contentGatingHandler, req, i18n } = out.global;
$ const { id, type, pageNode, showReadNextBlock, showBottomAdBlock, showTopStoryBlock, ...rest } = input;
$ const sections = getAsArray(input, "sections");

$ const displayComments = false; // ["contact"].includes(type) ? false : true;
$ const continueLabel = i18n("Sign Me Up!");
$ const loginEmailLabel = i18n("Work Email");
$ const buttonLabels = { continue: continueLabel };
$ const gateTitle = i18n("Your email helps us uphold our standards of quality content. Unlock full access to our articles with a quick submission.");
$ const gateButtonLabels = { continue: i18n("Continue") };
$ const actionText = i18n("signing up to receive your email notifications");

<global-content-wrapper-layout
  id=id
  type=type
  page-node=pageNode
  ...rest
>
  <@section|{ aliases }| modifiers=["first-sm"]>
    <theme-gam-define-display-ad
      name="leaderboard"
      position="content_page"
      aliases=aliases
      modifiers=["inter-block"]
    />
    <theme-gam-wallpaper-ad aliases=aliases position="content_page" />
  </@section>

  <@section|{ blockName, content, aliases }| modifiers=["content-header"]>
    $ const { primarySection } = content;
    $ const sectionHierarchy = getAsArray(primarySection, 'hierarchy');
    $ // If the section hierarchy contains a root Universal Taxonomy section
    $ if (sectionHierarchy.filter((v) => [87044,87048,87052,87053,88580].includes(v.id)).length) {
      const replacedHierarchy = [sectionHierarchy.pop()]
      primarySection.hierarchy = replacedHierarchy;
    };
    <div class="content-page-header">
      $ const handledPrimarySection = handleContentTypePrimarySection({ i18n, node: content });
      $ const handledPrimarySectionWithHierarchy = {
        ...handledPrimarySection,
        hierarchy: [handledPrimarySection],
      };
      <theme-content-page-breadcrumbs section=handledPrimarySectionWithHierarchy />
      <marko-web-content-name tag="h1" block-name=blockName obj=content />
      <theme-page-dates|{ blockName }|>
        Starts: <marko-web-content-start-date block-name=blockName obj=content format="MMMM Do YYYY, h:mm a z"/>
      </theme-page-dates>
      <global-sponsored-section-logo alias=primarySection.alias modifiers=["content-page"] class="mt-3" />
        <marko-web-social-sharing
          path=content.siteContext.path
          providers=["print", "facebook", "linkedin", "twitter", "pinterest"]
          print-path=`/print/content/${content.id}`
        />
    </div>
  </@section>

  <@section|{ aliases, content }| modifiers=["content-body"]>
    $ const { primarySection } = content;
    <div class="content-page-body">
      <theme-page-contents|{ blockName }| attrs={ "data-gallery-id": id }>
        $ const requiresRegistration = (get(content, "userRegistration.isCurrentlyRequired") || contentGatingHandler({ content, req }));
        $ const accessLevels = getAsArray(content, "userRegistration.accessLevels");
        <marko-web-identity-x-access|context|
          enabled=requiresRegistration
          required-access-level-ids=accessLevels
        >
          <if(!context.canAccess || context.requiresUserInput)>
            $ const body = getContentPreview({ body: content.body, selector: "p:lt(3)" });
            <global-supplier-submitted-block labels=content.labels />
            <marko-web-content-body block-name=blockName obj={ body } />

            <div class="content-page-preview-overlay" />
            <theme-content-page-gate
              can-access=context.canAccess
              is-logged-in=context.isLoggedIn
              has-required-access-level=context.hasRequiredAccessLevel
              requires-access-level=context.requiresAccessLevel
              requires-user-input=context.requiresUserInput
              messages=context.messages
              button-labels=gateButtonLabels
              title=gateTitle
              action-text=actionText
            />
          </if>
          <else>

            $ const bodyId = `content-body-${content.id}`;

            <global-supplier-submitted-block labels=content.labels />
            <marko-web-content-body block-name=blockName obj=content attrs={ id: bodyId } />

            <!-- needs input -->
            <if(input.afterBody)>
              <${input.afterBody}
                aliases=aliases
                block-name=blockName
                content=content
              />
            </if>

            <marko-web-content-sidebar-stubs|{ sidebar }|
              obj={ sidebarStubs: getAsArray(content, "sidebars") }
              block-name=blockName
            >
              <div id=sidebar.sequence class="page-contents__content-sidebar">
                <if(sidebar.name)>
                  <p><b>${sidebar.name}</b></p>
                </if>
                <div>$!{sidebar.body}</div>
              </div>
            </marko-web-content-sidebar-stubs>

            <marko-web-leaders-featured-companies content=content />

            <marko-web-social-sharing
              path=content.siteContext.path
              providers=["print", "facebook", "linkedin", "twitter", "pinterest"]
              print-path=`/print/content/${content.id}`
            />

            <marko-web-leaders-company-videos content-id=content.id />

            <marko-web-identity-x-context|{ hasUser }|>
              <if(!hasUser)>
                <identity-x-newsletter-form-inline
                  button-labels=buttonLabels
                  login-email-label=loginEmailLabel
                  login-email-placeholder=i18n("example@yourcompany.com")
                  type="inlineContent"
                  action-text=actionText
                  image-width="120"
                  image-height="242"
                />
              </if>
            </marko-web-identity-x-context>
          </else>
        </marko-web-identity-x-access>

        <if(displayComments)>
          <theme-identity-x-comment-stream content=content />
        </if>
      </theme-page-contents>
    </div>
  </@section>

  <@section|{ content }|>
    <theme-related-stories-block
      content-id=content.id
      section-id=content.primarySection.id
      published=content.published
      with-native-x=true
    />
  </@section>

  <if(showBottomAdBlock)>
    <@section|{ aliases }|>
      <theme-gam-define-display-ad
        name="rotation"
        position="content_page"
        aliases=aliases
        modifiers=["inter-block"]
      />
    </@section>
  </if>

  <if(showTopStoryBlock)>
    <@section>
      <theme-top-stories-block />
    </@section>
  </if>

  <for|s| of=sections>
    <@section|{ blockName, content, aliases }| modifiers=s.modifiers>
      <${s.renderBody}
        block-name=blockName
        content=content
        aliases=aliases
      />
    </@section>
  </for>
</global-content-wrapper-layout>
