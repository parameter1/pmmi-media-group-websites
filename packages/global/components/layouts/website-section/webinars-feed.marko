import queryFragment from "@mindful-web/marko-web-theme-monorail/graphql/fragments/section-feed-block";
import defaultValue from "@mindful-web/marko-core/utils/default-value";
import { getAsArray } from "@mindful-web/object-path";
import handleContentTypePrimarySection from "@pmmi-media-group/package-global/utils/handle-content-type-primary-section";

$ const { id, alias, description, name, pageNode } = input;
$ const sections = getAsArray(input, "sections");

$ const { site, pagination: p, i18n } = out.global;
$ const continueLabel = i18n("Sign Me Up!");
$ const loginEmailLabel = i18n("Work Email");
$ const buttonLabels = { continue: continueLabel };
$ const perPage = 12;
$ const now = Date.now();

$ const queryParams = {
  requiresImage: false,
  sectionBubbling: false,
  includeContentTypes: ["Webinar"],
  queryFragment,
};
$ const upcomingQueryParams = {
  ...queryParams,
  beginningAfter: now,
  limit: 25,
  sort: { field: "startDate", order: "asc" },
};
$ const archiveQueryParams = {
  ...queryParams,
  beginningBefore: now,
  sort: { field: "startDate", order: "desc" },
  limit: perPage,
  skip: p.skip({ perPage })
};

<!-- Correct queryParams format to send to pagination controls -->
$ const countQueryParams = {
  ...queryParams,
  beginning: {
    before: now,
  },
};

<theme-default-page title=name description=description>
  <@head>
    <theme-section-feed-block|{ totalCount }| count-only=true query-name="website-scheduled-content">
      <@query-params ...countQueryParams />
      <theme-pagination-controls
        per-page=perPage
        total-count=totalCount
        path=alias
        as-rels=true
      />
    </theme-section-feed-block>
  </@head>
  <@page>
    <marko-web-page-wrapper>
      <@section|{ aliases }| modifiers=["break-container", "first"]>
        <theme-gam-define-display-ad
          name="leaderboard"
          position="section_page"
          aliases=aliases
          modifiers=["inter-block"]
        />
      </@section>

      <@section|{ blockName, section, aliases }|>
        <if(input.beforeName)>
          <${input.beforeName}
            aliases=aliases
            block-name=blockName
            section=section
          />
        </if>
      </@section>
      <@section|{ blockName, section, aliases }| modifiers=["webinars"]>
        <marko-web-website-section-name|{ value }| tag="h1" block-name=blockName obj={ name }>
          <if(p.page > 1)>$!{value}: ${i18n("Page")} ${p.page}</if>
          <else>$!{value}</else>
        </marko-web-website-section-name>
        <marko-web-website-section-description obj={ description } />

        <if(input.afterName)>
          <${input.afterName}
            aliases=aliases
            block-name=blockName
            section=section
          />
        </if>
        <if(p.page === 1)>
          <marko-web-query|{ nodes }| name="website-scheduled-content" params=upcomingQueryParams>
            $ const finalNodes = nodes.map((node) => ({
              ...node,
              primarySection: handleContentTypePrimarySection({ i18n, node })
            }));
            <theme-section-feed-flow nodes=finalNodes modifiers=["upcoming"]>
              <@header>${i18n("Upcoming")}</@header>
            </theme-section-feed-flow>
            <theme-gam-define-display-ad
              name="rotation"
              position="section_page"
              aliases=aliases
              modifiers=["inter-block"]
            />
          </marko-web-query>
        </if>
        <marko-web-query|{ nodes }| name="website-scheduled-content" params=archiveQueryParams>
          $ const finalNodes = nodes.map((node) => ({
            ...node,
            primarySection: handleContentTypePrimarySection({ i18n, node })
          }));
          <theme-section-feed-flow nodes=finalNodes lazyload=false>
            <@header>${i18n("On Demand")}</@header>
          </theme-section-feed-flow>
        </marko-web-query>
        <theme-section-feed-block|{ totalCount }| count-only=true query-name="website-scheduled-content">
          <@query-params ...countQueryParams />
          <theme-pagination-controls
            per-page=perPage
            total-count=totalCount
            path=alias
          />
        </theme-section-feed-block>
      </@section>

      <@section>
        <theme-top-stories-block query-params={ optionName: "Pinned" } />
      </@section>

      <@section|{ aliases }|>
        <theme-native-x-promo-card-block placement-name="marketing" aliases=aliases />
      </@section>

      <@section>
        $ const defaultParams = {
            queryParams: { includeContentTypes: ["Product"] },
            section: { name: "Products", canonicalPath: "/products" },
        };
        $ const productsParams = defaultValue(site.get("productsParams"), defaultParams);
        <theme-content-card-list-block ...productsParams />
      </@section>

      <@section>
        <global-client-side-most-popular-block />
      </@section>

      $ const publicationIds = site.getAsArray("magazine.publicationIds");
      <if(publicationIds.length)>
        <@section>
          <theme-magazine-issues-block title=i18n("In Print") publication-id=publicationIds[0] />
        </@section>
      </if>

      <@section>
        <theme-content-card-deck-block
          query-params={ includeContentTypes: ["Document"], limit: 4 }
          section={ name: `${i18n("Downloads")}`, canonicalPath: "/downloads" }
        />
      </@section>

      <@section|{ aliases }|>
        <theme-gam-define-display-ad
          name="rotation"
          position="section_page"
          aliases=aliases
          modifiers=["inter-block"]
        />
      </@section>
    </marko-web-page-wrapper>
  </@page>
</theme-default-page>
