import queryFragment from "@mindful-web/marko-web-theme-monorail/graphql/fragments/section-feed-block";
import defaultValue from "@mindful-web/marko-core/utils/default-value";
import { getAsArray } from "@mindful-web/object-path";
import handleContentTypePrimarySection from "@pmmi-media-group/package-global/utils/handle-content-type-primary-section";

$ const { id, alias, name, pageNode } = input;
$ const sections = getAsArray(input, "sections");

$ const { site, pagination: p, i18n } = out.global;
$ const continueLabel = i18n("Sign Me Up!");
$ const loginEmailLabel = i18n("Work Email");
$ const buttonLabels = { continue: continueLabel };
$ const perPage = 12;
$ const pageDetails = site.getAsObject("pageDetails");
$ const actionText = i18n("signing up to receive your email notifications");
$ const queryParams = {
  sectionAlias: alias,
  limit: 3,
  queryFragment
};

<global-website-section-default-layout
  id=id
  alias=alias
  name=name
  page-node=pageNode
>
  <@head>
    <theme-section-feed-block|{ totalCount }| alias=alias count-only=true>
      <theme-pagination-controls
        per-page=perPage
        total-count=totalCount
        path=alias
        as-rels=true
      />
    </theme-section-feed-block>
  </@head>

  <@section|{ aliases }| modifiers=["break-container", "first"]>
    <theme-gam-define-display-ad
      name="leaderboard"
      position="section_page"
      aliases=aliases
      modifiers=["inter-block"]
    />
  </@section>

  <@section|{ blockName, section, aliases }|>
    <if(input.beforeName)>
      <${input.beforeName}
        aliases=aliases
        block-name=blockName
        section=section
      />
    </if>

    <marko-web-website-section-name|{ value }|
      tag="h1"
      block-name=blockName
      obj=section
      modifiers=[section.alias]
    >
      <if(p.page > 1)>$!{value}: ${i18n("Page")} ${p.page}</if>
      <else>$!{value}</else>
    </marko-web-website-section-name>

    <if(input.afterName)>
      <${input.afterName}
        aliases=aliases
        block-name=blockName
        section=section
      />
    </if>

    <if(pageDetails[alias])>
      $ const { feedDescription, ...rest } = pageDetails[alias];
      $ const content = { ...rest, body: feedDescription };
      <global-page-details-block content=content />
    </if>

    $ queryParams.skip = p.skip({ perPage });
    <marko-web-query|{ nodes }| name="website-scheduled-content" params=queryParams>
      $ const finalNodes = nodes.map((node) => ({
        ...node,
        ...((node.type && ['event', 'podcast', 'webinar'].includes(node.type)) &&  {
            primarySection: handleContentTypePrimarySection({ i18n, node })
          }),
      }));
     <theme-section-feed-flow nodes=finalNodes lazyload=false />
    </marko-web-query>
  </@section>

  <@section|{ aliases }|>
    <theme-gam-define-display-ad
      name="rotation"
      position="section_page"
      aliases=aliases
      modifiers=["inter-block"]
    />
  </@section>

  <@section>
    $ queryParams.skip = p.skip({ perPage, skip: 3 });
    <marko-web-query|{ nodes }| name="website-scheduled-content" params=queryParams>
      $ const finalNodes = nodes.map((node) => ({
        ...node,
        ...((node.type && ['event', 'podcast', 'webinar'].includes(node.type)) &&  {
            primarySection: handleContentTypePrimarySection({ i18n, node })
        }),
      }));
     <theme-section-feed-flow nodes=finalNodes lazyload=false />
    </marko-web-query>
  </@section>

  <@section>
    <marko-web-identity-x-context|{ hasUser }|>
      <if(!hasUser)>
        <identity-x-newsletter-form-inline
          button-labels=buttonLabels
          login-email-label=loginEmailLabel
          login-email-placeholder=i18n("example@yourcompany.com")
          type="inlineSection"
          action-text=actionText
          image-width="120"
          image-height="242"
        />
      </if>
    </marko-web-identity-x-context>
  </@section>

  <@section>
    $ queryParams.skip = p.skip({ perPage, skip: 6 });
    <marko-web-query|{ nodes }| name="website-scheduled-content" params=queryParams>
      $ const finalNodes = nodes.map((node) => ({
        ...node,
        ...((node.type && ['event', 'podcast', 'webinar'].includes(node.type)) &&  {
            primarySection: handleContentTypePrimarySection({ i18n, node })
        }),
      }));
     <theme-section-feed-flow nodes=finalNodes lazyload=false />
    </marko-web-query>
  </@section>

  <@section|{ aliases }|>
    <theme-gam-define-display-ad
      name="rotation"
      position="section_page"
      aliases=aliases
      modifiers=["inter-block"]
    />
  </@section>

  <@section>
    $ queryParams.skip = p.skip({ perPage, skip: 9 });
    <marko-web-query|{ nodes }| name="website-scheduled-content" params=queryParams>
      $ const finalNodes = nodes.map((node) => ({
        ...node,
        ...((node.type && ['event', 'podcast', 'webinar'].includes(node.type)) &&  {
            primarySection: handleContentTypePrimarySection({ i18n, node })
        }),
      }));
     <theme-section-feed-flow nodes=finalNodes lazyload=false />
    </marko-web-query>
    <theme-section-feed-block|{ totalCount }| alias=alias count-only=true>
      <theme-pagination-controls
        per-page=perPage
        total-count=totalCount
        path=alias
      />
    </theme-section-feed-block>
  </@section>

  <@section|{ aliases }|>
    <theme-gam-define-display-ad
      name="rotation"
      position="section_page"
      aliases=aliases
      modifiers=["inter-block"]
    />
  </@section>

  <@section>
    <theme-top-stories-block query-params={ optionName: "Pinned" } />
  </@section>

  <@section|{ aliases }|>
    <theme-native-x-promo-card-block placement-name="marketing" aliases=aliases />
  </@section>

  <@section>
    $ const defaultParams = {
        queryParams: { includeContentTypes: ["Product"] },
        section: { name: "Products", canonicalPath: "/products" },
    };
    $ const productsParams = defaultValue(site.get("productsParams"), defaultParams);
    <theme-content-card-list-block ...productsParams />
  </@section>

  <@section>
    <global-client-side-most-popular-block />
  </@section>

  $ const publicationIds = site.getAsArray("magazine.publicationIds");
  <if(publicationIds.length)>
    <@section>
      <theme-magazine-issues-block title=i18n("In Print") publication-id=publicationIds[0] />
    </@section>
  </if>

  <@section>
    <theme-content-card-deck-block
      query-params={ includeContentTypes: ["Document"], limit: 4 }
      section={ name: `${i18n("Downloads")}`, canonicalPath: "/downloads" }
    />
  </@section>

  <@section|{ aliases }|>
    <theme-gam-define-display-ad
      name="rotation"
      position="section_page"
      aliases=aliases
      modifiers=["inter-block"]
    />
  </@section>
</global-website-section-default-layout>
